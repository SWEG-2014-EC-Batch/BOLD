#include <iostream>
#include <algorithm>
using namespace std;

//An encryption/decryption program that allows the company to securely transmit four-digit data over the telephone
int main() {
    // Set a maximum number of attempts and initialize the number of attempts to equal the maximum
    const int max_attempts = 4;
    int num_attempts = max_attempts;

    // Declare variables for storing user input
    int number;
    char choice;

    // Display a welcome message and program description
    cout << "\n\nWelcome to the Data Encryption/Decryption Program!" << endl;
    cout << "This program allows you to securely transmit a four-digit integer over the telephone." << endl;
    cout << "You can choose to encrypt or decrypt the four-digit integer." << endl;
   
   // Keep prompting the user for a valid four-digit integer until they enter one or run out of attempts
    while (num_attempts > 0) {
        cout << "Enter a four-digit integer: ";
        cin >> number;

        // Check if the entered number is a four-digit integer, and provide feedback if it is not
        if (number < 1000 || number > 9999) {
            num_attempts--;
            cout << "The number entered is not a four-digit integer. Please enter another number with four digits." << endl;
            cout << "You have " << num_attempts << " attempts left." << endl;

            // Continue to the next iteration of the loop (prompting for input again)
            continue;
        }
        // If the user enters a valid four-digit integer, break out of the input validation loop and proceed with encryption/decryption
        break;
    }
   // If the user runs out of attempts, exit the program
    if (num_attempts == 0) {
        cout << "Sorry you have run out of attempts. Exiting program." << endl;
        return 0;
    }

    // Set up an array to hold the individual digits of the four-digit integer
    int digits[4];
    digits[0] = number / 1000;
    digits[1] = (number / 100) % 10;
    digits[2] = (number / 10) % 10;
    digits[3] = number % 10;

    // Prompt the user for their choice of encryption or decryption
    do {
        cout << "Enter your choice:" << endl;
        cout << "1. Encrypt" << endl;
        cout << "2. Decrypt" << endl;
        cin >> choice;
                if (choice != '1' && choice != '2') {
            cout << "Invalid choice. Please enter a valid choice (1 or 2)." << endl;
        }
    } while (choice != '1' && choice != '2');

    // If the user chooses encryption, perform the encryption algorithm
    if (choice == '1') {
        // Add 7 to each digit and take the remainder when divided by 10
        for (int i = 0; i < 4; i++) {
            digits[i] = (digits[i] + 7) % 10;
        }

        // Swap the first and third digits, and then swap the second and fourth digits.
        swap(digits[0], digits[2]);
        swap(digits[1], digits[3]);
       // Output the encrypted integer
        cout << "Encrypted integer: ";
        for (int i = 0; i < 4; i++) {
            cout << digits[i];
        }
        cout << endl;

    // If the user chooses decryption, perform the decryption algorithm
    } else {
        // add 3 to each digit and take the remainder when divided by 10
        for (int i = 0; i < 4; i++) {
            digits[i] = (digits[i] + 3) % 10;
        }

        // Swap the first and third digits, and then swap the second and fourth digits.
        swap(digits[0], digits[2]);
        swap(digits[1], digits[3]);
        
        // Output the decrypted integer
        cout << "Decrypted integer: ";
        for (int i = 0; i < 4; i++) {
            cout << digits[i];
        }
        cout << endl;
    }
    // Output a thank you message to the user
    cout << "Thank you for using the Data Encryption/Decryption Program!" << endl;
    return 0;
}
